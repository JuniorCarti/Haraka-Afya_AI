import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:firebase_auth/firebase_auth.dart'; // Add this import
import '../models/post.dart';
import '../repositories/post_repository.dart';

class CreatePostScreen extends StatefulWidget {
  const CreatePostScreen({super.key});

  @override
  State<CreatePostScreen> createState() => _CreatePostScreenState();
}

class _CreatePostScreenState extends State<CreatePostScreen> {
  final _formKey = GlobalKey<FormState>();
  final _titleController = TextEditingController(); // Added title controller
  final _contentController = TextEditingController();

  @override
  void dispose() {
    _titleController.dispose(); // Dispose title controller
    _contentController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final postRepo = Provider.of<PostRepository>(context);
    final currentUser = FirebaseAuth.instance.currentUser; // Now works with import

    return Scaffold(
      appBar: AppBar(
        title: const Text('Create Post'),
        actions: [
          TextButton(
            onPressed: () => _submitPost(postRepo, currentUser),
            child: const Text('Post'),
          ),
        ],
      ),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: _titleController, // Title field
                decoration: const InputDecoration(
                  hintText: 'Title (optional)',
                  border: OutlineInputBorder(),
                ),
                maxLines: 1,
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _contentController,
                decoration: const InputDecoration(
                  hintText: 'What would you like to share?',
                  border: OutlineInputBorder(),
                ),
                maxLines: 5,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter some content';
                  }
                  return null;
                },
              ),
            ],
          ),
        ),
      ),
    );
  }

  Future<void> _submitPost(PostRepository postRepo, User? user) async {
    if (_formKey.currentState!.validate() && user != null) {
      final newPost = Post(
        id: '', // Will be generated by Firestore
        authorId: user.uid,
        authorName: user.displayName ?? 'Anonymous',
        authorImage: user.photoURL ?? '',
        title: _titleController.text, // Added title
        content: _contentController.text,
        timestamp: DateTime.now(),
      );

      await postRepo.createPost(newPost);
      if (!mounted) return;
      Navigator.pop(context);
    }
  }
}